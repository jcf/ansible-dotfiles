# -*- mode: ruby -*-
# vim: ft=ruby

Pry.config.editor = '/usr/local/bin/mvim -f'

Pry.commands.alias_command 'c', 'continue' rescue nil
Pry.commands.alias_command 's', 'step' rescue nil
Pry.commands.alias_command 'n', 'next' rescue nil

# No more pager. It's awful.
Pry.config.pager = nil

begin
  require 'awesome_print'
  Pry.config.print = proc do |output, value|
    Pry::Helpers::BaseHelpers.stagger_output("=> #{value.ai}", output)
  end
rescue LoadError => err
  $stderr.puts 'awesome_print not available'
end

default_command_set = Pry::CommandSet.new do
  command 'copy', 'Copy argument to the clipboard' do |str|
    IO.popen('pbcopy', 'w') { |f| f << str.to_s }
  end

  command 'sql', 'Send sql via ActiveRecord.' do |query|
    if ENV.key?('RAILS_ENV') || defined?(Rails)
      pp ActiveRecord::Base.connection.select_all(query)
    else
      $stderr.puts 'Rails not defined'
    end
  end

  command 'caller_method' do |depth|
    depth = depth.to_i || 1
    if /^(.+?):(\d+)(?::in `(.*)')?/ =~ caller(depth + 1).first
      file   = Regexp.last_match[1]
      line   = Regexp.last_match[2].to_i
      method = Regexp.last_match[3]
      output.puts [file, line, method]
    end
  end
end

Pry.config.commands.import default_command_set

def quick(repetitions = 1000, &block)
  require 'benchmark'
  Benchmark.bmbm do |b|
    b.report { repetitions.times(&block) }
  end
  nil
end
