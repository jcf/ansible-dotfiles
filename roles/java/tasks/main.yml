---
- name: Install jenv
  git: >
    repo=git://github.com/gcuisinier/jenv.git
    dest=~/.jenv
  tags: update

- name: Install Java versions
  mac_pkg: >
    pkg_name=com.oracle.jdk{{ item.major }}u{{ item.minor }} pkg_version=1.1
    url=http://download.oracle.com/otn-pub/java/jdk/{{ item.major }}u{{ item.minor }}-{{ item.patch }}/jdk-{{ item.major }}u{{ item.minor }}-macosx-x64.dmg
    curl_opts="-L --cookie oraclelicense=accept-securebackup-cookie"
    archive_type=dmg archive_path='JDK {{ item.major }} Update {{ item.minor }}.pkg'
  sudo: yes
  with_items: dotfiles.jvm.versions

- name: Download unlimited security policy
  command: >-
    curl -L
      --cookie oraclelicense=accept-securebackup-cookie
      -o /tmp/jce-policy-{{ item.major }}.zip
      {{ item.url }}
    creates=/tmp/jce-policy-{{ item.major }}.zip
  with_items: crypto_jars

- stat: path=/tmp/jce-policy-{{ item.major }}.zip
  register: stats
  with_items: crypto_jars

- name: Verify crypto JARs
  assert:
    that: item.item.shasum == item.stat.checksum
  with_items: stats.results

- file: dest=/tmp/jce-policy-{{ item.major }} state=directory
  with_items: crypto_jars

- name: Unarchive crypto JARs
  command: >-
    unzip -f -j /tmp/jce-policy-{{ item.major }}.zip -x README.txt
    chdir=/tmp/jce-policy-{{ item.major }}
  with_items: crypto_jars

- name: Install unlimited local policy
  copy: >-
    src=/tmp/jce-policy-{{ item.major }}/local_policy.jar
    dest=/Library/Java/JavaVirtualMachines/jdk1.{{ item.major }}.0_{{ item.minor }}.jdk/Contents/Home/jre/lib/security/
    backup=yes
  sudo: yes
  with_items: dotfiles.jvm.versions

- name: Install unlimited US export policy
  copy: >-
    src=/tmp/jce-policy-{{ item.major }}/US_export_policy.jar
    dest=/Library/Java/JavaVirtualMachines/jdk1.{{ item.major }}.0_{{ item.minor }}.jdk/Contents/Home/jre/lib/security/
    backup=yes
  sudo: yes
  with_items: dotfiles.jvm.versions

- name: List Java homes
  command: ls -1 /Library/Java/JavaVirtualMachines/
  register: homes

- name: Register all JVMs
  command: 'jenv add /Library/Java/JavaVirtualMachines/{{ item }}/Contents/Home'
  with_items: homes.stdout_lines
  register: result
  failed_when: '"JDK managed by jenv" not in result.stdout'

- name: Set current JVM
  shell: 'jenv global {{ dotfiles.jvm.default_version }}'
  ignore_errors: yes
