[user]
  name = James Conroy-Finn
  email = james@logi.cl
  signingkey = A0357CAF
[apply]
  whitespace = nowarn
[alias]
  aliases = config --get-regexp '^alias'
  big-objects = !git-big-objects
  co = checkout
  conflicts = !git ls-files --unmerged | cut -c51- | sort -u | xargs $EDITOR
  cp = cherry-pick
  db = delete-branch
  ignored = "!git ls-files --others --exclude-standard"
  incoming = !git-incoming
  last = log -1 HEAD
  lc = log ORIG_HEAD.. --stat --no-merges
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
  missing = !sh -c 'git cherry "$0" | cut -sd + -f 2 | xargs "git show"'
  nb = checkout -b
  outgoing = !git-outgoing
  pending = !git --no-pager log origin/master..master && echo
  push-all = "!for i in $(git config --list | grep -E ^remote\\..+\\.url | sed -E 's/^remote\\.(.*)\\.url=.*/\\1/'); do git push $i master; done"
  put = push origin HEAD
  resolve = !git ls-files --unmerged | cut -c51- | sort -u | xargs git add
  show-last = !git show `git rev-parse HEAD`
  squish = repack -a -d --depth=250 --window=250
  subadd = !sh -c 'git submodule add $(git config -f"$0".git/config remote.origin.url) "$0"'
  submodule-rm = !git-submodule-rm
  sup = !git stash && git pull --rebase && git push && git stash pop
  thanks = !git-thanks
  track = !git-track
  unchanged = update-index --assume-unchanged
  unstage = reset HEAD
  up = !git pull --rebase && git push
  update-submodules = !git-update-submodules
  workdir = !git-new-workdir
[color]
  diff = auto
  status = auto
  branch = auto
[core]
  attributesfile = ~/.gitattributes
  excludesfile = ~/.gitignore
  editor = mvim -f --nomru
  autocrlf = input
  safecrlf = warn
[gui]
  fontdiff = -family Monaco -size 10 -weight normal -slant roman -underline 0 -overstrike 0
[mirror]
  summary = true
[branch]
  autosetupmerge = true
  autosetuprebase = always
[push]
  default = tracking
[help]
  autocorrect = 1

[github]
  user = jcf
  token = 

[heroku]
  account = logi.cl

[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"

[merge]
  tool = splice
[mergetool "splice"]
  cmd = "mvim -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
  trustExitCode = true

# http://bitfission.com/blog/2010/07/auto-merge-gemfile-lock.html
[merge "bundlelock"]
  name = lock Gemfile
  driver = bundle install

# http://tbaggery.com/2010/10/24/reduce-your-rails-schema-conflicts.html
[merge "railsschema"]
  name = newer Rails schema version
  driver = "ruby -e '\n\
    system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
    b = File.read(%(%A))\n\
    b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
    %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
    end\n\
    File.open(%(%A), %(w)) {|f| f.write(b)}\n\
    exit 1 if b.include?(%(<)*%L)'"

# vim: ft=gitconfig
