#!/usr/bin/env zsh
# Usage: dotfiles update
#
# Summary: Update installed dependencies
set -e

skip_repo=""
syslog=""
for args in "$@"
do
  if [ "$args" = "--skip-repo" ]; then
    skip_repo=1
    shift
  fi

  if [ "$args" = "--syslog" ]; then
    syslog=1
    shift
  fi
done

if [ -z $syslog ]; then
  say() {
    echo "\e[33m=>\e[0m $@"
  }
else
  say() {
    logger $@
  }
fi

updating() {
  say "Updating $1..."
}

pull() {
  cd $1
  if git diff-index --quiet HEAD --; then
    git pull -q --rebase >/dev/null
  else
    git stash save dotfiles-update >/dev/null
    git pull -q --rebase >/dev/null
    git stash pop >/dev/null
  fi
}

print_packages() {
  [[ $# -ne 0 ]] && echo "\e[36m=>\e[0m Updates available for" ${(j:, :)@}
}

if [ -z $skip_repo ]; then
  updating "dotfiles"
  pull $DOT
  pull "$DOT/zsh"
  git update-submodules &>/dev/null
fi

updating "emacs.d"
pull ~/.emacs.d

updating "homebrew"
brew update --head &>/dev/null
print_packages $(brew outdated)

updating "rbenv"
pull ~/.rbenv

for plugin in ~/.rbenv/plugins/*(/N); do
  updating $(basename $plugin)
  pull $plugin
done

updating "pyenv"
pull ~/.pyenv

updating "nvm"
pull ~/.nvm

for plugin in ~/.heroku/plugins/*(/N); do
  updating $(basename $plugin)
  pull $plugin
done

say "Updating cabal..."
cabal update &>/dev/null
cabal install cabal-update &>/dev/null
