#!/usr/bin/env zsh
# Usage: dotfiles setup
#
# Summary: Setup required dependencies
#
# Help: Checks for required external dependencies that are a pain to install
# automatically, and then install those dependencies that aren't.
set -e

say() {
  echo "\e[33m=>\e[0m $@"
}

brew_install() {
  brew install "$@" 2>/dev/null
}

brew_install_head() {
  brew install --HEAD "$1"
}

git_clone() {
  [[ -d $2 ]] || { git clone $1 $2 }
}

github_clone() {
  git_clone "git://github.com/$1.git" $2
}

require() {
  type $x >/dev/null 2>&1 || {
    echo >&2 "dotfiles: $x not installed."; exit 1;
  }
}

install_packages() {
  installed=($(brew list))
  packages=(git git-extras hub trash zsh)

  for package in $packages; do
    if [[ $installed[(r)$package] != $package ]]; then
      say "Installing $package"
      brew_install $package
    fi
  done
}

setup_rbenv() {
  github_clone 'sstephenson/rbenv' ~/.rbenv
  github_clone 'sstephenson/ruby-build' ~/.rbenv/plugins/ruby-build
  github_clone 'tpope/rbenv-ctags' ~/.rbenv/plugins/rbenv-ctags
  github_clone 'tpope/rbenv-readline' ~/.rbenv/plugins/rbenv-readline
}

require 'brew'

say "Installing Prezto..."
[[ -d "$HOME/.dotfiles/zsh" ]] ||
  git clone --recursive git@github.com:jcf/prezto.git $HOME/.dotfiles/zsh

say "Initialising submodules..."
git submodule update --init --recursive

say "Installing MacVim..."
brew_install "macvim" "--with-cscope --with-lua --override-system-vim --HEAD"

say "Installing Emacs..."
brew_install "emacs" "--cocoa --keep-ctags --use-git-head --with-gnutls --with-x --HEAD"

say "Installing packages..."
install_packages

say "Installing neobundle..."
github_clone 'Shougo/neobundle.vim' $HOME/.dotfiles/vim/vim.symlink/bundle/neobundle.vim

say "Installing Cask..."
[[ -d ~/.cask ]] || curl -fsSkL https://raw.github.com/cask/cask/master/go | python

say "Setting up rbenv..."
setup_rbenv

say "Setting up pyenv..."
github_clone 'yyuu/pyenv' ~/.pyenv

say "Linking dotfiles in to $HOME..."
dotfiles-link
